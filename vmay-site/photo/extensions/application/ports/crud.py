from typing import Protocol, TypeVar, Iterable, Dict, Any

from pkg.application.ports.crud import ReadRepositoryPort, CreateRepositoryPort

_Entity = TypeVar('_Entity')


class DjangoReadRepositoryPort(ReadRepositoryPort[_Entity], Protocol[_Entity]):
    def get_by_pk(self, pk: int) -> _Entity: ...
    def select_related(self, fields: Iterable[str]) -> Iterable[_Entity]: ...
    def select_related_filter(self, fields: Iterable[str], **filters: Dict[str, Any]) -> Iterable[_Entity]: ...
    def prefetch_related(self, fields: Iterable[str]) -> Iterable[_Entity]: ...
    def prefetch_related_filter(self, fields: Iterable[str], **filters: Dict[str, Any]) -> Iterable[_Entity]: ...


class DjangoCreateRepositoryPort(CreateRepositoryPort[_Entity], Protocol[_Entity]):
    def create(self, **fields: Dict[str, Any]) -> _Entity: ...
